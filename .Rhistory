df$vote = data.zero$OR
df
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", .3),
cbind("Nacho Cheese", .6),
cbind("Russel McRussel", -.35),
cbind("Chuck eCheese", -.20),
cbind("Vanilla Ice", .80)
)
)
colnames(df) <- c("player", "vote")
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
df$vote = data.zero$OR
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", .3),
cbind("Nacho Cheese", .6),
cbind("Russel McRussel", -.35),
cbind("Chuck eCheese", -.20),
cbind("Vanilla Ice", .4)
)
)
colnames(df) <- c("player", "vote")
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", .3),
cbind("Nacho Cheese", .24),
cbind("Russel McRussel", -.35),
cbind("Chuck eCheese", -.20),
cbind("Vanilla Ice", .4)
)
)
colnames(df) <- c("player", "vote")
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
df
df$vote = data.zero$OR
df
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", .008),
cbind("Nacho Cheese", .28),
cbind("Russel McRussel", -.26),
cbind("Chuck eCheese", -.16),
cbind("Vanilla Ice", .71)
)
)
colnames(df) <- c("player", "vote")
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
df
df$vote = data.zero$OR
df
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", .08),
cbind("Nacho Cheese", .28),
cbind("Russel McRussel", -.26),
cbind("Chuck eCheese", -.16),
cbind("Vanilla Ice", .71)
)
)
colnames(df) <- c("player", "vote")
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", .08),
cbind("Nacho Cheese", .28),
cbind("Russel McRussel", -.26),
cbind("Chuck eCheese", -.16),
cbind("Vanilla Ice", .71)
)
)
colnames(df) <- c("player", "vote")
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
df$vote = data.zero$OR
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
df
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", .08),
cbind("Nacho Cheese", .28),
cbind("Russel McRussel", -.26),
cbind("Chuck eCheese", -.16),
cbind("Vanilla Ice", .71)
)
)
colnames(df) <- c("player", "vote")
df
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", 0.0865981),
cbind("Nacho Cheese", 0.2886424),
cbind("Russel McRussel",-0.2604587),
cbind("Chuck eCheese", -0.1687611),
cbind("Vanilla Ice", 0.7145486)
)
)
colnames(df) <- c("player", "vote")
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
str(df)
df$vote = data.zero$OR
str(df)
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", 0.0865981),
cbind("Nacho Cheese", 0.2886424),
cbind("Russel McRussel",-0.2604587),
cbind("Chuck eCheese", -0.1687611),
cbind("Vanilla Ice", 0.7145486)
)
)
colnames(df) <- c("player", "vote")
df$vote <- as.numeric(df$vote)
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
str(df)
df
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", 0.0865981),
cbind("Nacho Cheese", 0.2886424),
cbind("Russel McRussel",-0.2604587),
cbind("Chuck eCheese", -0.1687611),
cbind("Vanilla Ice", 0.7145486)
)
)
colnames(df) <- c("player", "vote")
df$vote <- as.double(df$vote)
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
str(df)
df
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", 0.0865981),
cbind("Nacho Cheese", 0.2886424),
cbind("Russel McRussel",-0.2604587),
cbind("Chuck eCheese", -0.1687611),
cbind("Vanilla Ice", 0.7145486)
)
)
str(df)
colnames(df) <- c("player", "vote")
str(df)
df$vote <- as.double(df$vote)
str(df)
df
as.double(df$vote)
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", 0.0865981),
cbind("Nacho Cheese", 0.2886424),
cbind("Russel McRussel",-0.2604587),
cbind("Chuck eCheese", -0.1687611),
cbind("Vanilla Ice", 0.7145486)
)
)
colnames(df) <- c("player", "vote")
as.double(df$vote)
?as.double
as.doube(0.4)
as.double(0.4)
as.double(df$vote)
df$vote
df <- as.data.frame(
rbind.data.frame(
cbind.data.frame("Sammy Bonez", 0.0865981),
cbind.data.frame("Nacho Cheese", 0.2886424),
cbind.data.frame("Russel McRussel",-0.2604587),
cbind.data.frame("Chuck eCheese", -0.1687611),
cbind.data.frame("Vanilla Ice", 0.7145486)
)
)
colnames(df) <- c("player", "vote")
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
str(df)
df
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", 0.0865981),
cbind("Nacho Cheese", 0.2886424),
cbind("Russel McRussel",-0.2604587),
cbind("Chuck eCheese", -0.1687611),
cbind("Vanilla Ice", 0.7145486)
)
)
colnames(df) <- c("player", "vote")
df
str(df)
as.double(df$vote)
as.numeric(df$vote)
as.numeric(levels(df$vote))
df <- as.data.frame(
rbind(
cbind("Sammy Bonez", 0.0865981),
cbind("Nacho Cheese", 0.2886424),
cbind("Russel McRussel",-0.2604587),
cbind("Chuck eCheese", -0.1687611),
cbind("Vanilla Ice", 0.7145486)
)
)
colnames(df) <- c("player", "vote")
df$vote <- as.numeric(levels(df$vote))
ggplot() +
geom_bar(data = df, aes(x=player, y=vote), stat = "identity") +
coord_flip()
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
df$like <- ifelse(df$vote > 0, 1, 0)
ggplot() +
geom_bar(data = df, aes(x=player, y=vote, color=like), stat = "identity") +
coord_flip()
ggplot() +
geom_bar(data = df, aes(x=player, y=vote, group=like), stat = "identity") +
coord_flip()
ggplot() +
geom_bar(data = df, aes(x=player, y=vote, fill=like), stat = "identity") +
coord_flip()
str(df)
df$like <- ifelse(df$vote > 0, "Like", "Dislike")
ggplot() +
geom_bar(data = df, aes(x=player, y=vote, fill=like), stat = "identity") +
coord_flip()
ggplot() +
geom_bar(data = df, aes(x=player, y=vote, fill=like), stat = "identity") +
coord_flip() + + guides(fill=FALSE)
ggplot() +
geom_bar(data = df, aes(x=player, y=vote, fill=like), stat = "identity") +
coord_flip() + guides(fill=FALSE)
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
?geom_bar
ggplot() +
geom_bar(data = df, width=.5, aes(x=player, y=vote, fill=like), stat = "identity") +
coord_flip() + guides(fill=FALSE)
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
?geom_line
?linetype
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
?rgb
col2rgb("#3c8dbc")
rgb(col2rgb("#3c8dbc"))
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
icon("users")
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
?prettyNum("123123")
prettyNum("123123")
prettyNum("123123", big.mark = ",")
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
icon("mobile")
icon("mobile-alt")
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
install.packages("RCpp")
install.packages("Rcpp")
shiny::runApp('Dropbox/MSPA/498/App_Dashboard/GoSockeyesDashboard')
shiny::runApp('Dropbox/MSPA/498/Shiny')
help_text <- as.data.frame(
rbind(
c("Compute","Crunch the roster and update table and plots. Goal is to maximize team's total +/-"),
c("Export","Download roster as a CSV file"),
c("Save","Save settings. Not implemented yet"),
c("Reset","Reset settings"),
c("Probability of Improvement","Set a minimum average probability of improvement"),
c("Total Team Points","Set a minimum total team points"),
c("Maximum Average Age","Set a maximum average team age"),
c("Included Players","Type a list of players you must include in the roster. One from each source team please!"),
c("Excluded Players","Type a list of players you cannot include in the roste.")
)
)
runApp('Dropbox/MSPA/498/Shiny')
runApp('Dropbox/MSPA/498/Shiny')
runApp('Dropbox/MSPA/498/Shiny')
runApp('Dropbox/MSPA/498/Shiny')
runApp('Dropbox/MSPA/498/Shiny')
runApp('Dropbox/MSPA/498/Shiny')
player <- read.csv("draft_players.csv")
nhl <- read.csv("nhl.csv")
setwd("~/Dropbox/MSPA/498/Shiny")
player <- read.csv("draft_players.csv")
nhl <- read.csv("nhl.csv")
library(ggplot2)
player_plot <- function(roster) {
if (nrow(roster) <= 1) {
return(ggplot() + ggtitle("No Roster Was Computed"))
}
return(
ggplot(roster, aes(x=PTS, y=plusminus,color=Pos)) +
geom_point(alpha = 0.2, size = 12) +
ggtitle("Selected Roster Points by +/- by Player") +
xlab("Player Points") +
ylab("Player +/-") +
geom_text(label=roster$Player, show.legend = FALSE)
)
}
roster_plot <- function(nhl, roster) {
nhl <- nhl[nhl$Season=="2017", c("Tm","GP","PTS","plusminus")]
if (nrow(roster) <= 1) {
return(ggplot() + ggtitle("No Roster Was Computed"))
}
roster <- roster[,c("GP","PTS","plusminus")]
roster$Tm <- 'Sockeyes'
nhl <- rbind(nhl, roster)
nhl$PTS_PG <- nhl$PTS/nhl$GP
team_pts <- aggregate(PTS_PG ~ Tm  , data  = nhl, sum)
team_plusminus <- aggregate(plusminus ~ Tm  , data  = nhl, mean)
team_pts <- merge(team_pts, team_plusminus, by="Tm")
team_pts$Playoffs <- "Failed"
made_playoffs <- c('MTL','BOS','CBJ','TOR','CHI','MIN','SJS','AFM')
made_2nd      <- c('NYR','WSH','STL','EDM')
made_conf     <- c('OTT','ANA')
made_finals   <- c('NSH')
made_it       <- c('PIT')
team_pts[team_pts$Tm %in%  made_playoffs,]$Playoffs <- "Made Playoffs"
team_pts[team_pts$Tm %in%  made_2nd,]$Playoffs      <- "Made 2nd Round"
team_pts[team_pts$Tm %in%  made_conf,]$Playoffs     <- "Made Conference"
team_pts[team_pts$Tm %in%  made_finals,]$Playoffs   <- "Made Finals"
team_pts[team_pts$Tm %in%  made_it,]$Playoffs       <- "Won!"
team_pts[team_pts$Tm == "Sockeyes",]$Playoffs       <- "Sockeyes"
return(
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs)) +
geom_point(alpha = 0.2, size = 12) +
scale_colour_manual(values=c("darkgrey", "blue", "purple", "orange", "red", "darkgreen", "gold")) +
ggtitle("NHL 2017 PTS per Game by +/- by Team") +
xlab("Team Points Per Game") +
ylab("Team +/-") +
geom_text(label=team_pts$Tm, show.legend = TRUE)
)
}
# constraints
cons = rbind(
rep(1,i), # 30 man constraint
sapply(roster$Source_Team, function(x) if (x == "Anaheim Ducks") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Arizona Coyotes") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Boston Bruins") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Buffalo Sabres") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Calgary Flames") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Carolina Hurricanes") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Chicago Blackhawks") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Colorado Avalanche") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Columbus Blue Jackets") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Dallas Stars") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Detroit Red Wings") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Edmonton Oilers") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Florida Panthers") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Los Angeles Kings") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Minnesota Wild") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Montreal Canadiens") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Nashville Predators") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "New Jersey Devils") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "New York Islanders") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "New York Rangers") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Ottawa Senators") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Philadelphia Flyers") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Pittsburgh Penguins") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "San Jose Sharks") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "St. Louis Blues") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Tampa Bay Lightning") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Toronto Maple Leafs") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Vancouver Canucks") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Washington Capitals") x=1 else x=0),
sapply(roster$Source_Team, function(x) if (x == "Winnipeg Jets") x=1 else x=0),
sapply(roster$Pos, function(x) if (x == "C") x=1 else x=0),
sapply(roster$Pos, function(x) if (x == "D") x=1 else x=0),
sapply(roster$Pos, function(x) if (x == "LW") x=1 else x=0),
sapply(roster$Pos, function(x) if (x == "RW") x=1 else x=0),
sapply(roster$Pos, function(x) if (x == "G") x=1 else x=0),
as.vector(roster$Age),
as.vector(roster$CAP),
as.vector(roster$CAP),
as.vector(roster$P_Upside),
as.vector(roster$PTS),
sapply(roster$Status, function(x) if (x == "Include") x=1 else x=0),
sapply(roster$Status, function(x) if (x == "Exclude") x=1 else x=0)
)
runApp()
roster <- read.csv("roster-data-2019-03-11.csv")
roster_plot(nhl, roster)
roster_plot(nhl, roster)
nhl <- nhl[nhl$Season=="2017", c("Tm","GP","PTS","plusminus")]
roster <- roster[,c("GP","PTS","plusminus")]
roster$Tm <- 'Sockeyes'
nhl <- rbind(nhl, roster)
nhl$PTS_PG <- nhl$PTS/nhl$GP
team_pts <- aggregate(PTS_PG ~ Tm  , data  = nhl, sum)
team_plusminus <- aggregate(plusminus ~ Tm  , data  = nhl, mean)
team_pts <- merge(team_pts, team_plusminus, by="Tm")
team_pts$Playoffs <- "Failed"
made_playoffs <- c('MTL','BOS','CBJ','TOR','CHI','MIN','SJS','AFM')
made_2nd      <- c('NYR','WSH','STL','EDM')
made_conf     <- c('OTT','ANA')
made_finals   <- c('NSH')
made_it       <- c('PIT')
team_pts[team_pts$Tm %in%  made_playoffs,]$Playoffs <- "Made Playoffs"
team_pts[team_pts$Tm %in%  made_2nd,]$Playoffs      <- "Made 2nd Round"
team_pts[team_pts$Tm %in%  made_conf,]$Playoffs     <- "Made Conference"
team_pts[team_pts$Tm %in%  made_finals,]$Playoffs   <- "Made Finals"
team_pts[team_pts$Tm %in%  made_it,]$Playoffs       <- "Won!"
team_pts[team_pts$Tm == "Sockeyes",]$Playoffs       <- "Sockeyes"
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs)) +
geom_point(alpha = 0.2, size = 12) +
scale_colour_manual(values=c("darkgrey", "blue", "purple", "orange", "red", "darkgreen", "gold")) +
ggtitle("NHL 2017 PTS per Game by +/- by Team") +
xlab("Team Points Per Game") +
ylab("Team +/-") +
geom_text(label=team_pts$Tm, show.legend = TRUE)
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs))
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs)) +
geom_point(alpha = 0.2, size = 12)
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs)) +
geom_point(alpha = 0.2, size = 12) +
scale_colour_manual(values=c("darkgrey", "blue", "purple", "orange", "red", "darkgreen", "gold"))
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs)) +
geom_point(alpha = 0.2, size = 12) +
scale_colour_manual(values=c("darkgrey", "blue", "purple", "orange", "red", "darkgreen", "gold")) +
ggtitle("NHL 2017 PTS per Game by +/- by Team") +
xlab("Team Points Per Game")
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs)) +
geom_point(alpha = 0.2, size = 12) +
scale_colour_manual(values=c("darkgrey", "blue", "purple", "orange", "red", "darkgreen", "gold")) +
ggtitle("NHL 2017 PTS per Game by +/- by Team") +
xlab("Team Points Per Game") +
ylab("Team +/-")
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs)) +
geom_point(alpha = 0.2, size = 12) +
scale_colour_manual(values=c("darkgrey", "blue", "purple", "orange", "red", "darkgreen", "gold")) +
ggtitle("NHL 2017 PTS per Game by +/- by Team") +
xlab("Team Points Per Game") +
ylab("Team +/-") +
geom_text(label=team_pts$Tm, show.legend = TRUE)
label=team_pts$Tm
team_pts$Tm
length(team_pts$Tm)
length(team_pts)
nrow(team_pts)
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs)) +
geom_point(alpha = 0.2, size = 12) +
scale_colour_manual(values=c("darkgrey", "blue", "purple", "orange", "red", "darkgreen", "gold")) +
ggtitle("NHL 2017 PTS per Game by +/- by Team") +
xlab("Team Points Per Game") +
ylab("Team +/-") +
geom_text(label=team_pts$Tm, show.legend = TRUE)
length(team_pts$PTS_PG)
length(team_pts$plusminus)
length(team_pts)
length(team_pts$Tm)
ggplot(team_pts, aes(x=PTS_PG, y=plusminus, color=Playoffs)) +
geom_point(alpha = 0.2, size = 12) +
scale_colour_manual(values=c("darkgrey", "blue", "purple", "orange", "red", "darkgreen", "gold")) +
ggtitle("NHL 2017 PTS per Game by +/- by Team") +
xlab("Team Points Per Game") +
ylab("Team +/-") +
geom_text(label=team_pts$Tm, show.legend = FALSE)
